stages: # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

build:
  stage: build

  script:
    - echo "building code... This will take about 10 seconds."
    - sleep 2
    - echo "No lint issues found."

lint-test-job: # This job also runs in the test stage.
  stage: test # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 2
    - echo "No lint issues found."

deploy:
  stage: deploy
  image:
    name: gcr.io/k8s-skaffold/skaffold:v2.0.0
    entrypoint: [""]
  environment:
    name: production
  when: manual
  script:
    - sed -i "s/user/${DB_USER}/g" ./conf/db_secrets.yaml
    - sed -i "s/pass/${DB_PASSWORD}/g" ./conf/db_secrets.yaml

    - kubectl config get-contexts
    # Configure kubectl to use our own k8s cluster, you need to setup an Gitlab agent in you k8s kluster
    - kubectl config use-context $K8S_CONTEXT
    # # Authorize the cluster to pull images from our registry. (synced against Deploy Token "gitlab-deploy-token")
    # - kubectl delete secret regcred || true
    # - kubectl create secret docker-registry regcred --docker-server=$CI_REGISTRY --docker-username=$CI_DEPLOY_USER --docker-password=$CI_DEPLOY_PASSWORD

    - kubectl apply -f ./conf/db_secrets.yaml -f ./conf/postgres-authdb.yaml -f ./conf/postgres-litterdb.yaml

    # Debugging outputs after completion
    - kubectl get deployments
    - kubectl get pods
    - kubectl get services
